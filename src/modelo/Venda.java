package modelo;
// Generated Nov 17, 2016 12:19:20 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Venda generated by hbm2java
 */
@Entity
@Table(name="venda"
    ,catalog="froze"
)
public class Venda  implements java.io.Serializable {


     private Integer idvenda;
     private Cliente cliente;
     private Usuario usuario;
     private Date dataVenda;
     private Double valorTotal;
     private double trocos;
     private double valorReceber;
     private Set<Produtovenda> produtovendas = new HashSet<Produtovenda>(0);

    public Venda() {
    }
    
     public Venda(Cliente cliente, Usuario usuario, Date dataVenda, Double valorTotal, double trocos, double valorReceber) {
       this.cliente = cliente;
       this.usuario = usuario;
       this.dataVenda = dataVenda;
       this.valorTotal = valorTotal;
       this.trocos = trocos;
       this.valorReceber = valorReceber;
       //this.produtovendas = produtovendas;
    }
    
    public Venda(Cliente cliente, Usuario usuario, Date dataVenda, Double valorTotal, double trocos, double valorReceber, Set<Produtovenda> produtovendas) {
       this.cliente = cliente;
       this.usuario = usuario;
       this.dataVenda = dataVenda;
       this.valorTotal = valorTotal;
       this.trocos = trocos;
       this.valorReceber = valorReceber;
       this.produtovendas = produtovendas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idvenda", unique=true, nullable=false)
    public Integer getIdvenda() {
        return this.idvenda;
    }
    
    public void setIdvenda(Integer idvenda) {
        this.idvenda = idvenda;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cliente_idcliente", nullable=false)
    public Cliente getCliente() {
        return this.cliente;
    }
    
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="usuario_idusuario", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_venda", nullable=false, length=19)
    public Date getDataVenda() {
        return this.dataVenda;
    }
    
    public void setDataVenda(Date dataVenda) {
        this.dataVenda = dataVenda;
    }

    
    @Column(name="valor_Total", precision=22, scale=0)
    public Double getValorTotal() {
        return this.valorTotal;
    }
    
    public void setValorTotal(Double valorTotal) {
        this.valorTotal = valorTotal;
    }

    
    @Column(name="trocos", nullable=false, precision=22, scale=0)
    public double getTrocos() {
        return this.trocos;
    }
    
    public void setTrocos(double trocos) {
        this.trocos = trocos;
    }

    
    @Column(name="valor_receber", nullable=false, precision=22, scale=0)
    public double getValorReceber() {
        return this.valorReceber;
    }
    
    public void setValorReceber(double valorReceber) {
        this.valorReceber = valorReceber;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="venda")
    public Set<Produtovenda> getProdutovendas() {
        return this.produtovendas;
    }
    
    public void setProdutovendas(Set<Produtovenda> produtovendas) {
        this.produtovendas = produtovendas;
    }




}


